<?php
/**
 * File AppKernel.php
 * Created at: 2016-08-29 10-57
 *
 * @author Daniel Bojdo <daniel.bojdo@web-it.eu>
 */

namespace Webit\DoctrineJsonBundle\Tests;

use JMS\SerializerBundle\JMSSerializerBundle;
use Symfony\Bundle\FrameworkBundle\FrameworkBundle;
use Symfony\Component\Config\Loader\LoaderInterface;
use Symfony\Component\HttpKernel\Bundle\BundleInterface;
use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Yaml\Yaml;
use Webit\DoctrineJsonBundle\WebitDoctrineJsonBundle;

class AppKernel extends Kernel
{
    private $runId;

    /**
     * @var array
     */
    private $config;

    private $runDir;

    /**
     * AppKernel constructor.
     * @param array $config
     */
    public function __construct($runId, array $config)
    {
        $this->runId = $runId;
        $this->runDir = sys_get_temp_dir().'/'. $this->runId;
        @mkdir($this->runDir, 0755);

        $this->config = $this->runDir .'/config.yml';
        file_put_contents($this->config, Yaml::dump($config));
    }

    public function getContainerBuilder()
    {
        return parent::getContainerBuilder(); // TODO: Change the autogenerated stub
    }

    public function getCacheDir()
    {
        return $this->runDir .'/cache';
    }


    public function getLogDir()
    {
        return $this->runDir .'/logs';
    }

    public function getName()
    {
        return 'AppKernel'.$this->runId;
    }

    public function getContainerClass()
    {
        return 'Container'.$this->runId;
    }

    /**
     * Returns an array of bundles to register.
     *
     * @return BundleInterface[] An array of bundle instances
     */
    public function registerBundles()
    {
        return array(
            new FrameworkBundle(),
            new WebitDoctrineJsonBundle(),
            new JMSSerializerBundle()
        );
    }

    /**
     * Loads the container configuration.
     *
     * @param LoaderInterface $loader A LoaderInterface instance
     */
    public function registerContainerConfiguration(LoaderInterface $loader)
    {
        $loader->load($this->config);
//        $loader->load(__DIR__.'/Resources/config/config.yml');
    }
}
